{"version":3,"sources":["components/ProgressBar/ProgressBar.js","components/Label/Label.js","components/TextInput/TextInput.js","components/EyeIcon/EyeIcon.js","components/PasswordInput/PasswordInput.js","components/TextInputCSSModules/textInput.module.css","../config/componentData.js","docs/examples/EyeIcon/Example.js","docs/examples/Label/ExampleOptional.js","docs/examples/Label/ExampleRequired.js","docs/examples/PasswordInput/ExampleAllFeatures.js","docs/examples/ProgressBar/Example100Percent.js","docs/examples/ProgressBar/Example10Percent.js","docs/examples/ProgressBar/Example30Percent.js","docs/examples/ProgressBar/Example50Percent.js","docs/examples/ProgressBar/Example70Percent.js","docs/examples/ProgressBar/Example90Percent.js","docs/examples/TextInput/ExampleError.js","docs/examples/TextInput/ExampleOptional.js","components/HelloWorld/HelloWorld.js","docs/examples/HelloWorld/ExampleHelloWorld.js","components/RegistrationForm/RegistrationForm.js","docs/examples/RegistrationForm/ExampleRegistrationForm.js","components/TextInputBEM/TextInputBEM.js","docs/examples/TextInputBEM/ExampleError.js","components/TextInputCSSModules/TextInputCSSModules.js","docs/examples/TextInputCSSModules/ExampleError.js","components/TextInputStyledComponents/TextInputStyledComponents.js","docs/examples/TextInputStyledComponents/ExampleError.js","prism.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","reportWebVitals.js","index.js"],"names":["ProgressBar","getColor","percent","props","getWidthAsPercentOfTotalWidth","parseInt","width","this","height","style","border","backgroundColor","React","Component","defaultProps","Label","htmlFor","label","required","display","color","TextInput","htmlId","name","type","onChange","placeholder","value","error","children","marginBottom","id","className","EyeIcon","xmlns","viewBox","transform","fill","d","cx","cy","r","PasswordInput","toggleShowPassword","event","setState","prevState","showPassword","preventDefault","state","maxLength","showVisibilityToggle","quality","href","onClick","marginLeft","length","module","exports","EyeIconExample","ExampleOptional","ExampleRequired","ExampleAllFeatures","password","target","minLength","getQuality","Example100Percent","Example10Percent","Example30Percent","Example50Percent","Example70Percent","Example90Percent","textValue","undefined","HelloWorld","message","ExampleHelloWorld","RegistrationForm","user","onSubmit","validate","submitted","email","errors","minPasswordLength","Object","getOwnPropertyNames","confirmationMessage","passwordQuality","ExampleRegistrationForm","console","log","TextInputBEM","styles","fieldset","inputError","TextInputCSSModules","Error","styled","div","Input","input","Fieldset","TextInputStyledComponents","_self","window","WorkerGlobalScope","self","Prism","e","t","n","manual","util","encode","a","content","alias","map","replace","prototype","toString","call","match","objId","__id","defineProperty","clone","hasOwnProperty","languages","extend","insertBefore","i","arguments","l","o","s","DFS","plugins","highlightAll","callback","selector","hooks","run","elements","document","querySelectorAll","highlightElement","test","parentNode","toLowerCase","nodeName","u","element","language","grammar","code","textContent","Worker","g","filename","onmessage","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","Token","c","h","f","inside","lookbehind","m","greedy","p","y","pattern","global","v","RegExp","source","b","k","w","lastIndex","P","_","exec","A","index","j","x","O","S","slice","N","C","E","push","L","Array","splice","apply","rest","all","add","join","tag","classes","attributes","parent","spellcheck","keys","addEventListener","parse","close","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","entity","title","xml","html","mathml","svg","clike","string","keyword","number","operator","javascript","regex","interpolation","script","js","jsx","spread","webpackContext","req","webpackContextResolve","__webpack_require__","resolve","Navigation","components","key","CodeExample","ref","Example","toggleCode","showCode","example","description","ExampleComponent","require","componentName","default","Props","defaultValue","ComponentPage","component","examples","Docs","route","location","hash","substr","componentData","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71b36377.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends React.Component {\n    getColor = (percent) => {\n        if (this.props.percent === 100) return 'green';\n        if (this.props.percent >= 80) return 'lightgreen';\n        if (this.props.percent >= 60) return 'yellowgreen';\n        if (this.props.percent >= 40) return 'yellow';\n        if (this.props.percent >= 20) return 'crimson';\n        return 'red';\n    }\n\n    getWidthAsPercentOfTotalWidth = () => {\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\n    }\n\n    render() {\n        const {percent, width, height} = this.props;\n        return (\n            <div style={{border: 'solid 1px lightgray', width:width}}>\n                <div style={{\n                    width: this.getWidthAsPercentOfTotalWidth(),\n                    height,\n                    backgroundColor: this.getColor(percent)\n                }} />\n            </div>\n        );\n    }\n}\n\nProgressBar.propTypes = {\n    /** Percent of progress completed */\n    percent: PropTypes.number.isRequired,\n    /** Bar width */\n    width: PropTypes.number.isRequired,\n    /** Bar height */\n    height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n    height: 5\n}\n\nexport default ProgressBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n    return (\n        <label style={{display: 'block'}} htmlFor={htmlFor}>\n            {label} {required && <span style={{color: 'red'}}> *</span>}\n        </label>\n    )\n}\n\nLabel.propTypes = {\n    /** HTML ID for associated inpuit */\n    htmlFor: PropTypes.string.isRequired,\n    /** Label text */\n    label: PropTypes.string.isRequired,\n    /**Display asterisk after label if true */\n    required: PropTypes.bool\n}\n\nexport default Label;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div style={{marginBottom:16}}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            style={error && {border: 'solid 1 px red'}}\n            {...props}/>\n            {children}\n            {error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;","import React from 'react';\nfunction EyeIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\" width=\"24px\"><g transform=\"matrix(.02146 0 0 .02146 1 1)\" fill=\"#4d4d4d\"><path d=\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\" /><circle cx=\"466.08\" cy=\"466.02\" r=\"134.5\" /></g></svg>\n    )\n}\nexport default EyeIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  }\n\n  render() {\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}>\n        {\n          showVisibilityToggle &&\n          <a\n            href=\"\"\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}>\n            <EyeIcon />\n          </a>\n        }\n        {\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n        }\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInput;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"textInput_fieldset__12mau\",\"error\":\"textInput_error__r7LpN\",\"inputError\":\"textInput_inputError__2pecQ\"};","module.exports = /* eslint-disable */ [{\"name\":\"EyeIcon\",\"description\":\"\",\"code\":\"import React from 'react';\\nfunction EyeIcon() {\\n    return (\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 22 22\\\" width=\\\"24px\\\"><g transform=\\\"matrix(.02146 0 0 .02146 1 1)\\\" fill=\\\"#4d4d4d\\\"><path d=\\\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\\\" /><circle cx=\\\"466.08\\\" cy=\\\"466.02\\\" r=\\\"134.5\\\" /></g></svg>\\n    )\\n}\\nexport default EyeIcon;\",\"examples\":[{\"name\":\"Example\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport EyeIcon from 'ps-react/EyeIcon'\\n\\nexport default function EyeIconExample() {\\n    return <EyeIcon />\\n}\"}]},{\"name\":\"HelloWorld\",\"description\":\"Custom message to say Hello\",\"props\":{\"message\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Message to Display\",\"defaultValue\":{\"value\":\"'World'\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Custom message to say Hello */\\nfunction HelloWorld({message}) {\\n    return <div>Hello {message}</div>\\n\\n}\\n\\nHelloWorld.propTypes = {\\n    /** Message to Display */\\n    message: PropTypes.string\\n}\\n\\nHelloWorld.defaultProps = {\\n    message: 'World'\\n};\\n\\nexport default HelloWorld; \",\"examples\":[{\"name\":\"ExampleHelloWorld\",\"description\":\"Custom Message\",\"code\":\"import React from 'react';\\nimport HelloWorld from 'ps-react/HelloWorld';\\n\\n/** Custom Message */\\nexport default function ExampleHelloWorld() {\\n    return <HelloWorld message=\\\"Pluralsite viewers!\\\" />\\n}\"}]},{\"name\":\"Label\",\"description\":\"Label with required field display, htmlFor, and block styling\",\"props\":{\"htmlFor\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"HTML ID for associated inpuit\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Label text\"},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Label with required field display, htmlFor, and block styling */\\nfunction Label({htmlFor, label, required}) {\\n    return (\\n        <label style={{display: 'block'}} htmlFor={htmlFor}>\\n            {label} {required && <span style={{color: 'red'}}> *</span>}\\n        </label>\\n    )\\n}\\n\\nLabel.propTypes = {\\n    /** HTML ID for associated inpuit */\\n    htmlFor: PropTypes.string.isRequired,\\n    /** Label text */\\n    label: PropTypes.string.isRequired,\\n    /**Display asterisk after label if true */\\n    required: PropTypes.bool\\n}\\n\\nexport default Label;\",\"examples\":[{\"name\":\"ExampleOptional\",\"description\":\"Optional label\",\"code\":\"import React from 'react';\\nimport Label from 'ps-react/Label';\\n\\n/** Optional label */\\nexport default function ExampleOptional() {\\n    return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" />\\n}\"},{\"name\":\"ExampleRequired\",\"description\":\"Required label\",\"code\":\"import React from 'react';\\nimport Label from 'ps-react/Label';\\n\\n/** Required label */\\nexport default function ExampleRequired() {\\n    return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" required/>\\n}\"}]},{\"name\":\"PasswordInput\",\"description\":\"Password input with integrated label, quality tips, and show password toggle.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used by convention.\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Password value\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Input label\",\"defaultValue\":{\"value\":\"'Password'\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function called when password input value changes\"},\"maxLength\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Max password length accepted\",\"defaultValue\":{\"value\":\"50\",\"computed\":false}},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder displayed when no password is entered\"},\"showVisibilityToggle\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to true to show the toggle for displaying the currently entered password\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"quality\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Display password quality visually via ProgressBar, accepts a number between 0 and 100\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Validation error to display\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport ProgressBar from '../ProgressBar';\\nimport EyeIcon from '../EyeIcon';\\nimport TextInput from '../TextInput';\\n\\n/** Password input with integrated label, quality tips, and show password toggle. */\\nclass PasswordInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showPassword: false\\n    }\\n  }\\n\\n  toggleShowPassword = event => {\\n    this.setState(prevState => {\\n      return { showPassword: !prevState.showPassword };\\n    });\\n    if (event) event.preventDefault();\\n  }\\n\\n  render() {\\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props } = this.props;\\n    const { showPassword } = this.state;\\n\\n    return (\\n      <TextInput\\n        htmlId={htmlId}\\n        label={label}\\n        placeholder={placeholder}\\n        type={showPassword ? 'text' : 'password'}\\n        onChange={onChange}\\n        value={value}\\n        maxLength={maxLength}\\n        error={error}\\n        required\\n        {...props}>\\n        {\\n          showVisibilityToggle &&\\n          <a\\n            href=\\\"\\\"\\n            onClick={this.toggleShowPassword}\\n            style={{ marginLeft: 5 }}>\\n            <EyeIcon />\\n          </a>\\n        }\\n        {\\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\\n        }\\n      </TextInput>\\n    );\\n  }\\n}\\n\\nPasswordInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\\n  name: PropTypes.string.isRequired,\\n\\n  /** Password value */\\n  value: PropTypes.any,\\n\\n  /** Input label */\\n  label: PropTypes.string,\\n\\n  /** Function called when password input value changes */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Max password length accepted */\\n  maxLength: PropTypes.number,\\n\\n  /** Placeholder displayed when no password is entered */\\n  placeholder: PropTypes.string,\\n\\n  /** Set to true to show the toggle for displaying the currently entered password */\\n  showVisibilityToggle: PropTypes.bool,\\n\\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\\n  quality: PropTypes.number,\\n\\n  /** Validation error to display */\\n  error: PropTypes.string\\n};\\n\\nPasswordInput.defaultProps = {\\n  maxLength: 50,\\n  showVisibilityToggle: false,\\n  label: 'Password'\\n};\\n\\nexport default PasswordInput;\",\"examples\":[{\"name\":\"ExampleAllFeatures\",\"description\":\"All features enabled\",\"code\":\"import React from 'react';\\nimport PasswordInput from 'ps-react/PasswordInput';\\n\\n/** All features enabled */\\nclass ExampleAllFeatures extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      password: ''\\n    };\\n  }\\n\\n  getQuality() {\\n    const length = this.state.password.length;\\n    return length > 10 ? 100 : length * 10;\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <PasswordInput\\n          htmlId=\\\"password-input-example-all-features\\\"\\n          name=\\\"password\\\"\\n          onChange={ event => this.setState({ password: event.target.value })}\\n          value={this.state.password}\\n          minLength={8}\\n          placeholder=\\\"Enter password\\\"\\n          showVisibilityToggle\\n          quality={this.getQuality()}\\n          {...this.props} />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default ExampleAllFeatures;\"}]},{\"name\":\"ProgressBar\",\"description\":\"\",\"props\":{\"percent\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Percent of progress completed\"},\"width\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Bar width\"},\"height\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Bar height\",\"defaultValue\":{\"value\":\"5\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nclass ProgressBar extends React.Component {\\n    getColor = (percent) => {\\n        if (this.props.percent === 100) return 'green';\\n        if (this.props.percent >= 80) return 'lightgreen';\\n        if (this.props.percent >= 60) return 'yellowgreen';\\n        if (this.props.percent >= 40) return 'yellow';\\n        if (this.props.percent >= 20) return 'crimson';\\n        return 'red';\\n    }\\n\\n    getWidthAsPercentOfTotalWidth = () => {\\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\\n    }\\n\\n    render() {\\n        const {percent, width, height} = this.props;\\n        return (\\n            <div style={{border: 'solid 1px lightgray', width:width}}>\\n                <div style={{\\n                    width: this.getWidthAsPercentOfTotalWidth(),\\n                    height,\\n                    backgroundColor: this.getColor(percent)\\n                }} />\\n            </div>\\n        );\\n    }\\n}\\n\\nProgressBar.propTypes = {\\n    /** Percent of progress completed */\\n    percent: PropTypes.number.isRequired,\\n    /** Bar width */\\n    width: PropTypes.number.isRequired,\\n    /** Bar height */\\n    height: PropTypes.number\\n};\\n\\nProgressBar.defaultProps = {\\n    height: 5\\n}\\n\\nexport default ProgressBar;\",\"examples\":[{\"name\":\"Example100Percent\",\"description\":\"100% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 100% progress */\\nexport default function Example100Percent() {\\n    return <ProgressBar percent={100} width={150} />\\n}\"},{\"name\":\"Example10Percent\",\"description\":\"10% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 10% progress */\\nexport default function Example10Percent() {\\n    return <ProgressBar percent={10} width={150} />\\n}\"},{\"name\":\"Example30Percent\",\"description\":\"30% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 30% progress */\\nexport default function Example30Percent() {\\n    return <ProgressBar percent={30} width={150} />\\n}\"},{\"name\":\"Example50Percent\",\"description\":\"50% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 50% progress */\\nexport default function Example50Percent() {\\n    return <ProgressBar percent={50} width={150} />\\n}\"},{\"name\":\"Example70Percent\",\"description\":\"70% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 70% progress */\\nexport default function Example70Percent() {\\n    return <ProgressBar percent={70} width={150} />\\n}\"},{\"name\":\"Example90Percent\",\"description\":\"90% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'ps-react/ProgressBar';\\n\\n/** 90% progress */\\nexport default function Example90Percent() {\\n    return <ProgressBar percent={90} width={150} />\\n}\"}]},{\"name\":\"RegistrationForm\",\"description\":\"Registration form with built-in validation.\",\"props\":{\"confirmationMessage\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Message displayed upon successful submission\",\"defaultValue\":{\"value\":\"\\\"Thanks for registering!\\\"\",\"computed\":false}},\"onSubmit\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Called when form is submitted\"},\"minPasswordLength\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Minimum password length\",\"defaultValue\":{\"value\":\"8\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport TextInput from '../TextInput';\\nimport PasswordInput from '../PasswordInput';\\n\\n/** Registration form with built-in validation. */\\nclass RegistrationForm extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      user: {\\n        email: '',\\n        password: ''\\n      },\\n      errors: {},\\n      submitted: false,\\n    };\\n  }\\n\\n  onChange = (event) => {\\n    const user = this.state.user;\\n    user[event.target.name] = event.target.value;\\n    this.setState({user});\\n  }\\n\\n  // Returns a number from 0 to 100 that represents password quality.\\n  // For simplicity, just returning % of min length entered.\\n  // Could enhance with checks for number, special char, unique characters, etc.\\n  passwordQuality(password) {\\n    if (!password) return null;\\n    if (password.length >= this.props.minPasswordLength) return 100;\\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\\n    return percentOfMinLength;\\n  }\\n\\n  validate({email, password}) {\\n    const errors = {};\\n    const {minPasswordLength} = this.props;\\n\\n    if (!email) errors.email = 'Email required.';\\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\\n\\n    this.setState({errors});\\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\\n    return formIsValid;\\n  }\\n\\n  onSubmit = () => {\\n    const {user} = this.state;\\n    const formIsValid = this.validate(user);\\n    if (formIsValid) {\\n      this.props.onSubmit(user);\\n      this.setState({submitted: true});\\n    }\\n  }\\n\\n  render() {\\n    const {errors, submitted} = this.state;\\n    const {email, password} = this.state.user;\\n\\n    return (\\n      submitted ?\\n      <h2>{this.props.confirmationMessage}</h2> :\\n      <div>\\n        <TextInput\\n          htmlId=\\\"registration-form-email\\\"\\n          name=\\\"email\\\"\\n          onChange={this.onChange}\\n          label=\\\"Email\\\"\\n          value={email}\\n          error={errors.email}\\n          required />\\n\\n        <PasswordInput\\n          htmlId=\\\"registration-form-password\\\"\\n          name=\\\"password\\\"\\n          value={password}\\n          onChange={this.onChange}\\n          quality={this.passwordQuality(password)}\\n          showVisibilityToggle\\n          maxLength={50}\\n          error={errors.password} />\\n\\n        <input type=\\\"submit\\\" value=\\\"Register\\\" onClick={this.onSubmit} />\\n      </div>\\n    )\\n  }\\n}\\n\\nRegistrationForm.propTypes = {\\n  /** Message displayed upon successful submission */\\n  confirmationMessage: PropTypes.string,\\n\\n  /** Called when form is submitted */\\n  onSubmit: PropTypes.func.isRequired,\\n\\n  /** Minimum password length */\\n  minPasswordLength: PropTypes.number\\n}\\n\\nRegistrationForm.defaultProps = {\\n  confirmationMessage: \\\"Thanks for registering!\\\",\\n  minPasswordLength: 8\\n};\\n\\nexport default RegistrationForm;\",\"examples\":[{\"name\":\"ExampleRegistrationForm\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport RegistrationForm from 'ps-react/RegistrationForm';\\n\\nexport default class ExampleRegistrationForm extends React.Component {\\n    onSubmit = (user) => {\\n        console.log(user);\\n    }\\n    render() {\\n        return <RegistrationForm onSubmit={this.onSubmit} />\\n    }\\n\\n\\n}\"}]},{\"name\":\"TextInput\",\"description\":\"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input label\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false}]},\"required\":false,\"description\":\"Input type\",\"defaultValue\":{\"value\":\"\\\"text\\\"\",\"computed\":false}},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Mark label with asterisk if set to true\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder to display when empty\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"children\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"Child component to display next to the input\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\n\\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({htmlId, name, label, type = \\\"text\\\", required = false, onChange, placeholder, value, error, children, ...props}) {\\n    return (\\n        <div style={{marginBottom:16}}>\\n            <Label htmlFor={htmlId} label={label} required={required} />\\n            <input\\n            id={htmlId}\\n            type={type}\\n            name={name}\\n            placeholder={placeholder}\\n            value={value}\\n            onChange={onChange}\\n            style={error && {border: 'solid 1 px red'}}\\n            {...props}/>\\n            {children}\\n            {error && <div className=\\\"error\\\" style={{color: 'red'}}>{error}</div>}\\n        </div>\\n    );\\n};\\n\\nTextInput.propTypes = {\\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n    htmlId: PropTypes.string.isRequired,\\n  \\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n    name: PropTypes.string.isRequired,\\n  \\n    /** Input label */\\n    label: PropTypes.string.isRequired,\\n  \\n    /** Input type */\\n    type: PropTypes.oneOf(['text', 'number', 'password']),\\n  \\n    /** Mark label with asterisk if set to true */\\n    required: PropTypes.bool,\\n  \\n    /** Function to call onChange */\\n    onChange: PropTypes.func.isRequired,\\n  \\n    /** Placeholder to display when empty */\\n    placeholder: PropTypes.string,\\n  \\n    /** Value */\\n    value: PropTypes.any,\\n  \\n    /** String to display when error occurs */\\n    error: PropTypes.string,\\n  \\n    /** Child component to display next to the input */\\n    children: PropTypes.node\\n  };\\n  \\n  export default TextInput;\",\"examples\":[{\"name\":\"ExampleError\",\"description\":\"Required TextBox with Error\",\"code\":\"import React from 'react';\\nimport TextInput from 'ps-react/TextInput';\\n\\n/** Required TextBox with Error*/\\nclass ExampleOptional extends React.Component {\\n    constructor(props) {\\n        super(props);\\n    \\n        this.state = {\\n          textValue: ''\\n        };\\n      }\\n    render() {\\n        return (\\n            <TextInput\\n            htmlId=\\\"example-optional\\\"\\n            label=\\\"First Name\\\"\\n            name=\\\"firstname\\\"\\n            onChange={ event => this.setState({ textValue: event.target.value })}\\n            required\\n            error={this.state.textValue === '' ? \\\"First Name Is Required\\\" : undefined}\\n            />\\n        )\\n    }\\n}\\n\\nexport default ExampleOptional;\"},{\"name\":\"ExampleOptional\",\"description\":\"Optional TextBox\",\"code\":\"import React from 'react';\\nimport TextInput from 'ps-react/TextInput';\\n\\n/** Optional TextBox */\\nexport default class ExampleOptional extends React.Component {\\n    render() {\\n        return (\\n            <TextInput\\n            htmlId=\\\"example-optional\\\"\\n            label=\\\"First Name\\\"\\n            name=\\\"firstname\\\"\\n            onChange={() => {}}\\n            />\\n        )\\n    }\\n}\"}]},{\"name\":\"TextInputBEM\",\"description\":\"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input label\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false}]},\"required\":false,\"description\":\"Input type\",\"defaultValue\":{\"value\":\"\\\"text\\\"\",\"computed\":false}},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Mark label with asterisk if set to true\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder to display when empty\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"children\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"Child component to display next to the input\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\n\\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({htmlId, name, label, type = \\\"text\\\", required = false, onChange, placeholder, value, error, children, ...props}) {\\n    return (\\n        <div className=\\\"textinput\\\">\\n            <Label htmlFor={htmlId} label={label} required={required} />\\n            <input\\n            id={htmlId}\\n            type={type}\\n            name={name}\\n            placeholder={placeholder}\\n            value={value}\\n            onChange={onChange}\\n            className={error && 'textinput__input--state-error'}\\n            {...props}/>\\n            {children}\\n            {error && <div className=\\\"textinput__error\\\">{error}</div>}\\n        </div>\\n    );\\n};\\n\\nTextInput.propTypes = {\\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n    htmlId: PropTypes.string.isRequired,\\n  \\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n    name: PropTypes.string.isRequired,\\n  \\n    /** Input label */\\n    label: PropTypes.string.isRequired,\\n  \\n    /** Input type */\\n    type: PropTypes.oneOf(['text', 'number', 'password']),\\n  \\n    /** Mark label with asterisk if set to true */\\n    required: PropTypes.bool,\\n  \\n    /** Function to call onChange */\\n    onChange: PropTypes.func.isRequired,\\n  \\n    /** Placeholder to display when empty */\\n    placeholder: PropTypes.string,\\n  \\n    /** Value */\\n    value: PropTypes.any,\\n  \\n    /** String to display when error occurs */\\n    error: PropTypes.string,\\n  \\n    /** Child component to display next to the input */\\n    children: PropTypes.node\\n  };\\n  \\n  export default TextInput;\",\"examples\":[{\"name\":\"ExampleError\",\"description\":\"Required TextBox with Error\",\"code\":\"import React from 'react';\\nimport TextInputBEM from 'ps-react/TextInputBEM';\\n\\n/** Required TextBox with Error*/\\nclass ExampleOptional extends React.Component {\\n    constructor(props) {\\n        super(props);\\n    \\n        this.state = {\\n          textValue: ''\\n        };\\n      }\\n    render() {\\n        return (\\n            <TextInputBEM\\n            htmlId=\\\"example-optional\\\"\\n            label=\\\"First Name\\\"\\n            name=\\\"firstname\\\"\\n            onChange={ event => this.setState({ textValue: event.target.value })}\\n            required\\n            error={this.state.textValue === '' ? \\\"First Name Is Required\\\" : undefined}\\n            />\\n        )\\n    }\\n}\\n\\nexport default ExampleOptional;\"}]},{\"name\":\"TextInputCSSModules\",\"description\":\"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input label\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false}]},\"required\":false,\"description\":\"Input type\",\"defaultValue\":{\"value\":\"\\\"text\\\"\",\"computed\":false}},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Mark label with asterisk if set to true\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder to display when empty\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"children\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"Child component to display next to the input\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\nimport styles from './textInput.module.css';\\n\\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({htmlId, name, label, type = \\\"text\\\", required = false, onChange, placeholder, value, error, children, ...props}) {\\n    return (\\n        <div className={styles.fieldset}>\\n            <Label htmlFor={htmlId} label={label} required={required} />\\n            <input\\n            id={htmlId}\\n            type={type}\\n            name={name}\\n            placeholder={placeholder}\\n            value={value}\\n            onChange={onChange}\\n            className={error && styles.inputError}\\n            {...props}/>\\n            {children}\\n            {error && <div className={styles.error}>{error}</div>}\\n        </div>\\n    );\\n};\\n\\nTextInput.propTypes = {\\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n    htmlId: PropTypes.string.isRequired,\\n  \\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n    name: PropTypes.string.isRequired,\\n  \\n    /** Input label */\\n    label: PropTypes.string.isRequired,\\n  \\n    /** Input type */\\n    type: PropTypes.oneOf(['text', 'number', 'password']),\\n  \\n    /** Mark label with asterisk if set to true */\\n    required: PropTypes.bool,\\n  \\n    /** Function to call onChange */\\n    onChange: PropTypes.func.isRequired,\\n  \\n    /** Placeholder to display when empty */\\n    placeholder: PropTypes.string,\\n  \\n    /** Value */\\n    value: PropTypes.any,\\n  \\n    /** String to display when error occurs */\\n    error: PropTypes.string,\\n  \\n    /** Child component to display next to the input */\\n    children: PropTypes.node\\n  };\\n  \\n  export default TextInput;\",\"examples\":[{\"name\":\"ExampleError\",\"description\":\"Required TextBox with Error\",\"code\":\"import React from 'react';\\nimport TextInputCSSModules from 'ps-react/TextInputCSSModules';\\n\\n/** Required TextBox with Error*/\\nclass ExampleOptional extends React.Component {\\n    constructor(props) {\\n        super(props);\\n    \\n        this.state = {\\n          textValue: ''\\n        };\\n      }\\n    render() {\\n        return (\\n            <TextInputCSSModules\\n            htmlId=\\\"example-optional\\\"\\n            label=\\\"First Name\\\"\\n            name=\\\"firstname\\\"\\n            onChange={ event => this.setState({ textValue: event.target.value })}\\n            required\\n            error={this.state.textValue === '' ? \\\"First Name Is Required\\\" : undefined}\\n            />\\n        )\\n    }\\n}\\n\\nexport default ExampleOptional;\"}]},{\"name\":\"TextInputStyledComponents\",\"description\":\"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input label\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false}]},\"required\":false,\"description\":\"Input type\",\"defaultValue\":{\"value\":\"\\\"text\\\"\",\"computed\":false}},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Mark label with asterisk if set to true\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder to display when empty\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"children\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"Child component to display next to the input\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\nimport styled from 'styled-components';\\n\\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({htmlId, name, label, type = \\\"text\\\", required = false, onChange, placeholder, value, error, children, ...props}) {\\n\\n    const Error = styled.div`\\n        color: red;\\n    `;\\n    const Input = styled.input`\\n        border: ${error && 'solid 1px red'};\\n        display: block;\\n    `;\\n    const Fieldset = styled.div`\\n        margin-bottom: 16px;\\n    `;\\n\\n    return (\\n        <Fieldset>\\n            <Label htmlFor={htmlId} label={label} required={required} />\\n            <Input\\n            id={htmlId}\\n            type={type}\\n            name={name}\\n            placeholder={placeholder}\\n            value={value}\\n            onChange={onChange}\\n            {...props}/>\\n            {children}\\n            {error && <Error>{error}</Error>}\\n        </Fieldset>\\n    );\\n};\\n\\nTextInput.propTypes = {\\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n    htmlId: PropTypes.string.isRequired,\\n  \\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n    name: PropTypes.string.isRequired,\\n  \\n    /** Input label */\\n    label: PropTypes.string.isRequired,\\n  \\n    /** Input type */\\n    type: PropTypes.oneOf(['text', 'number', 'password']),\\n  \\n    /** Mark label with asterisk if set to true */\\n    required: PropTypes.bool,\\n  \\n    /** Function to call onChange */\\n    onChange: PropTypes.func.isRequired,\\n  \\n    /** Placeholder to display when empty */\\n    placeholder: PropTypes.string,\\n  \\n    /** Value */\\n    value: PropTypes.any,\\n  \\n    /** String to display when error occurs */\\n    error: PropTypes.string,\\n  \\n    /** Child component to display next to the input */\\n    children: PropTypes.node\\n  };\\n  \\n  export default TextInput;\",\"examples\":[{\"name\":\"ExampleError\",\"description\":\"Required TextBox with Error\",\"code\":\"import React from 'react';\\nimport TextInputStyledComponents from 'ps-react/TextInputStyledComponents';\\n\\n/** Required TextBox with Error*/\\nclass ExampleOptional extends React.Component {\\n    constructor(props) {\\n        super(props);\\n    \\n        this.state = {\\n          textValue: ''\\n        };\\n      }\\n    render() {\\n        return (\\n            <TextInputStyledComponents\\n            htmlId=\\\"example-optional\\\"\\n            label=\\\"First Name\\\"\\n            name=\\\"firstname\\\"\\n            onChange={ event => this.setState({ textValue: event.target.value })}\\n            required\\n            error={this.state.textValue === '' ? \\\"First Name Is Required\\\" : undefined}\\n            />\\n        )\\n    }\\n}\\n\\nexport default ExampleOptional;\"}]}]","import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon'\n\nexport default function EyeIconExample() {\n    return <EyeIcon />\n}","import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional label */\nexport default function ExampleOptional() {\n    return <Label htmlFor=\"test\" label=\"test\" />\n}","import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Required label */\nexport default function ExampleRequired() {\n    return <Label htmlFor=\"test\" label=\"test\" required/>\n}","import React from 'react';\nimport PasswordInput from 'ps-react/PasswordInput';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: ''\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password-input-example-all-features\"\n          name=\"password\"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 100% progress */\nexport default function Example100Percent() {\n    return <ProgressBar percent={100} width={150} />\n}","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 10% progress */\nexport default function Example10Percent() {\n    return <ProgressBar percent={10} width={150} />\n}","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 30% progress */\nexport default function Example30Percent() {\n    return <ProgressBar percent={30} width={150} />\n}","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 50% progress */\nexport default function Example50Percent() {\n    return <ProgressBar percent={50} width={150} />\n}","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n    return <ProgressBar percent={70} width={150} />\n}","import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 90% progress */\nexport default function Example90Percent() {\n    return <ProgressBar percent={90} width={150} />\n}","import React from 'react';\nimport TextInput from 'ps-react/TextInput';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInput\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;","import React from 'react';\nimport TextInput from 'ps-react/TextInput';\n\n/** Optional TextBox */\nexport default class ExampleOptional extends React.Component {\n    render() {\n        return (\n            <TextInput\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={() => {}}\n            />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Custom message to say Hello */\nfunction HelloWorld({message}) {\n    return <div>Hello {message}</div>\n\n}\n\nHelloWorld.propTypes = {\n    /** Message to Display */\n    message: PropTypes.string\n}\n\nHelloWorld.defaultProps = {\n    message: 'World'\n};\n\nexport default HelloWorld; ","import React from 'react';\nimport HelloWorld from 'ps-react/HelloWorld';\n\n/** Custom Message */\nexport default function ExampleHelloWorld() {\n    return <HelloWorld message=\"Pluralsite viewers!\" />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from '../TextInput';\nimport PasswordInput from '../PasswordInput';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if (!email) errors.email = 'Email required.';\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div>\n        <TextInput\n          htmlId=\"registration-form-email\"\n          name=\"email\"\n          onChange={this.onChange}\n          label=\"Email\"\n          value={email}\n          error={errors.email}\n          required />\n\n        <PasswordInput\n          htmlId=\"registration-form-password\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password} />\n\n        <input type=\"submit\" value=\"Register\" onClick={this.onSubmit} />\n      </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: \"Thanks for registering!\",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;","import React from 'react';\nimport RegistrationForm from 'ps-react/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n    onSubmit = (user) => {\n        console.log(user);\n    }\n    render() {\n        return <RegistrationForm onSubmit={this.onSubmit} />\n    }\n\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className=\"textinput\">\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            className={error && 'textinput__input--state-error'}\n            {...props}/>\n            {children}\n            {error && <div className=\"textinput__error\">{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;","import React from 'react';\nimport TextInputBEM from 'ps-react/TextInputBEM';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputBEM\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styles from './textInput.module.css';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className={styles.fieldset}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            className={error && styles.inputError}\n            {...props}/>\n            {children}\n            {error && <div className={styles.error}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;","import React from 'react';\nimport TextInputCSSModules from 'ps-react/TextInputCSSModules';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputCSSModules\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styled from 'styled-components';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n\n    const Error = styled.div`\n        color: red;\n    `;\n    const Input = styled.input`\n        border: ${error && 'solid 1px red'};\n        display: block;\n    `;\n    const Fieldset = styled.div`\n        margin-bottom: 16px;\n    `;\n\n    return (\n        <Fieldset>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <Input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            {...props}/>\n            {children}\n            {error && <Error>{error}</Error>}\n        </Fieldset>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;","import React from 'react';\nimport TextInputStyledComponents from 'ps-react/TextInputStyledComponents';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputStyledComponents\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;","/* eslint-disable */\n/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+clike+javascript+jsx */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={manual:_self.Prism&&_self.Prism.manual,util:{encode:function(e){return e instanceof a?new a(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case\"Object\":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=n.util.clone(e[r]));return a;case\"Array\":return e.map&&e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var a=n.util.clone(n.languages[e]);for(var r in t)a[r]=t[r];return a},insertBefore:function(e,t,a,r){r=r||n.languages;var i=r[e];if(2==arguments.length){a=arguments[1];for(var l in a)a.hasOwnProperty(l)&&(i[l]=a[l]);return i}var o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in a)a.hasOwnProperty(l)&&(o[l]=a[l]);o[s]=i[s]}return n.languages.DFS(n.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,t,a,r){r=r||{};for(var i in e)e.hasOwnProperty(i)&&(t.call(e,i,e[i],a||i),\"Object\"!==n.util.type(e[i])||r[n.util.objId(e[i])]?\"Array\"!==n.util.type(e[i])||r[n.util.objId(e[i])]||(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,i,r)):(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,null,r)))}},plugins:{},highlightAll:function(e,t){var a={callback:t,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var r,i=a.elements||document.querySelectorAll(a.selector),l=0;r=i[l++];)n.highlightElement(r,e===!0,a.callback)},highlightElement:function(t,a,r){for(var i,l,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,\"\"])[1].toLowerCase(),l=n.languages[i]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i,o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i);var s=t.textContent,u={element:t,language:i,grammar:l,code:s};if(n.hooks.run(\"before-sanity-check\",u),!u.code||!u.grammar)return u.code&&(n.hooks.run(\"before-highlight\",u),u.element.textContent=u.code,n.hooks.run(\"after-highlight\",u)),n.hooks.run(\"complete\",u),void 0;if(n.hooks.run(\"before-highlight\",u),a&&_self.Worker){var g=new Worker(n.filename);g.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(t),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},highlight:function(e,t,r){var i=n.tokenize(e,t);return a.stringify(n.util.encode(i),r)},matchGrammar:function(e,t,a,r,i,l,o){var s=n.Token;for(var u in a)if(a.hasOwnProperty(u)&&a[u]){if(u==o)return;var g=a[u];g=\"Array\"===n.util.type(g)?g:[g];for(var c=0;c<g.length;++c){var h=g[c],f=h.inside,d=!!h.lookbehind,m=!!h.greedy,p=0,y=h.alias;if(m&&!h.pattern.global){var v=h.pattern.toString().match(/[imuy]*$/)[0];h.pattern=RegExp(h.pattern.source,v+\"g\")}h=h.pattern||h;for(var b=r,k=i;b<t.length;k+=t[b].length,++b){var w=t[b];if(t.length>e.length)return;if(!(w instanceof s)){h.lastIndex=0;var _=h.exec(w),P=1;if(!_&&m&&b!=t.length-1){if(h.lastIndex=k,_=h.exec(e),!_)break;for(var A=_.index+(d?_[1].length:0),j=_.index+_[0].length,x=b,O=k,S=t.length;S>x&&(j>O||!t[x].type&&!t[x-1].greedy);++x)O+=t[x].length,A>=O&&(++b,k=O);if(t[b]instanceof s||t[x-1].greedy)continue;P=x-b,w=e.slice(k,O),_.index-=k}if(_){d&&(p=_[1].length);var A=_.index+p,_=_[0].slice(p),j=A+_.length,N=w.slice(0,A),C=w.slice(j),E=[b,P];N&&(++b,k+=N.length,E.push(N));var L=new s(u,f?n.tokenize(_,f):_,y,_,m);if(E.push(L),C&&E.push(C),Array.prototype.splice.apply(t,E),1!=P&&n.matchGrammar(e,t,a,b,k,!0,u),l)break}else if(l)break}}}}},tokenize:function(e,t){var a=[e],r=t.rest;if(r){for(var i in r)t[i]=r[i];delete t.rest}return n.matchGrammar(e,a,t,0,0,!1),a},hooks:{all:{},add:function(e,t){var a=n.hooks.all;a[e]=a[e]||[],a[e].push(t)},run:function(e,t){var a=n.hooks.all[e];if(a&&a.length)for(var r,i=0;r=a[i++];)r(t)}}},a=n.Token=function(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.length=0|(a||\"\").length,this.greedy=!!r};if(a.stringify=function(e,t,r){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return a.stringify(n,t,e)}).join(\"\");var i={type:e.type,content:a.stringify(e.content,t,r),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:r};if(\"comment\"==i.type&&(i.attributes.spellcheck=\"true\"),e.alias){var l=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}n.hooks.run(\"wrap\",i);var o=Object.keys(i.attributes).map(function(e){return e+'=\"'+(i.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+(o?\" \"+o:\"\")+\">\"+i.content+\"</\"+i.tag+\">\"},!_self.document)return _self.addEventListener?(_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),a=t.language,r=t.code,i=t.immediateClose;_self.postMessage(n.highlight(r,n.languages[a],a)),i&&_self.close()},!1),_self.Prism):_self.Prism;var r=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return r&&(n.filename=r.src,!document.addEventListener||n.manual||r.hasAttribute(\"data-manual\")||(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",n.highlightAll))),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i,inside:{punctuation:/[=>\"']/}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,lookbehind:!0,inside:{punctuation:/(\\.|\\\\)/}},keyword:/\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(true|false)\\b/,\"function\":/[a-z0-9_]+(?=\\()/i,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,number:/\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\"function\":/[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:\"language-javascript\"}}),Prism.languages.js=Prism.languages.javascript;\n!function(a){var e=a.util.clone(a.languages.javascript);a.languages.jsx=a.languages.extend(\"markup\",e),a.languages.jsx.tag.pattern=/<\\/?[\\w\\.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(\\\\?[\\s\\S])*?\\1|[^\\s'\">=]+|(\\{[\\s\\S]*?\\})))?|\\{\\.{3}\\w+\\})\\s*)*\\/?>/i,a.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i,a.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}\\w+\\}/,inside:{punctuation:/\\{|\\}|\\./,\"attr-value\":/\\w+/}}},a.languages.jsx.tag);var s=a.util.clone(a.languages.jsx);delete s.punctuation,s=a.languages.insertBefore(\"jsx\",\"operator\",{punctuation:/=(?={)|[{}[\\];(),.:]/},{jsx:s}),a.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,inside:s,alias:\"language-javascript\"}},a.languages.jsx.tag)}(Prism);","var map = {\n\t\"./EyeIcon/Example\": 16,\n\t\"./EyeIcon/Example.js\": 16,\n\t\"./HelloWorld/ExampleHelloWorld\": 28,\n\t\"./HelloWorld/ExampleHelloWorld.js\": 28,\n\t\"./Label/ExampleOptional\": 17,\n\t\"./Label/ExampleOptional.js\": 17,\n\t\"./Label/ExampleRequired\": 18,\n\t\"./Label/ExampleRequired.js\": 18,\n\t\"./PasswordInput/ExampleAllFeatures\": 19,\n\t\"./PasswordInput/ExampleAllFeatures.js\": 19,\n\t\"./ProgressBar/Example100Percent\": 20,\n\t\"./ProgressBar/Example100Percent.js\": 20,\n\t\"./ProgressBar/Example10Percent\": 21,\n\t\"./ProgressBar/Example10Percent.js\": 21,\n\t\"./ProgressBar/Example30Percent\": 22,\n\t\"./ProgressBar/Example30Percent.js\": 22,\n\t\"./ProgressBar/Example50Percent\": 23,\n\t\"./ProgressBar/Example50Percent.js\": 23,\n\t\"./ProgressBar/Example70Percent\": 24,\n\t\"./ProgressBar/Example70Percent.js\": 24,\n\t\"./ProgressBar/Example90Percent\": 25,\n\t\"./ProgressBar/Example90Percent.js\": 25,\n\t\"./RegistrationForm/ExampleRegistrationForm\": 29,\n\t\"./RegistrationForm/ExampleRegistrationForm.js\": 29,\n\t\"./TextInput/ExampleError\": 26,\n\t\"./TextInput/ExampleError.js\": 26,\n\t\"./TextInput/ExampleOptional\": 27,\n\t\"./TextInput/ExampleOptional.js\": 27,\n\t\"./TextInputBEM/ExampleError\": 30,\n\t\"./TextInputBEM/ExampleError.js\": 30,\n\t\"./TextInputCSSModules/ExampleError\": 31,\n\t\"./TextInputCSSModules/ExampleError.js\": 31,\n\t\"./TextInputStyledComponents/ExampleError\": 32,\n\t\"./TextInputStyledComponents/ExampleError.js\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 47;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <ul className=\"navigation\">\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../prism';\nimport {PrismCode} from 'react-prism';\nimport 'prismjs/themes/prism-twilight.css'\n\nclass CodeExample extends React.Component {\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <PrismCode className=\"language-jsx\">\n          {this.props.children}\n        </PrismCode>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n    // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n    return (\n      <div className=\"example\">\n        {description && <h4>{description}</h4> }\n\n        <ExampleComponent />\n\n        <p>\n          <a href=\"\" onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </a>\n        </p>\n\n         {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        Object.keys(props).map(key => {\n          return (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>{props[key].description}</td>\n              <td>{props[key].type.name}</td>\n              <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n              <td>{props[key].required && \"X\"}</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route)[0] : componentData[0];\n\n    return (\n      <div>\n        <Navigation components={componentData.map(component => component.name)} />\n        <ComponentPage component={component} />\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Docs />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}