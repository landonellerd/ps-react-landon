(this["webpackJsonpps-react-landon"]=this["webpackJsonpps-react-landon"]||[]).push([[0],[,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(){var e;Object(r.a)(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))).getColor=function(t){return 100===e.props.percent?"green":e.props.percent>=80?"lightgreen":e.props.percent>=60?"yellowgreen":e.props.percent>=40?"yellow":e.props.percent>=20?"crimson":"red"},e.getWidthAsPercentOfTotalWidth=function(){return parseInt(e.props.width*(e.props.percent/100),10)},e}return Object(a.a)(n,[{key:"render",value:function(){var e=this.props,t=e.percent,n=e.width,r=e.height;return l.a.createElement("div",{style:{border:"solid 1px lightgray",width:n}},l.a.createElement("div",{style:{width:this.getWidthAsPercentOfTotalWidth(),height:r,backgroundColor:this.getColor(t)}}))}}]),n}(l.a.Component);p.defaultProps={height:5};var u=p},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(0),a=n.n(r);var o=function(e){var t=e.htmlFor,n=e.label,r=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:t},n," ",r&&a.a.createElement("span",{style:{color:"red"}}," *"))}},,function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(7),a=n(0),o=n.n(a),i=n(6);var s=function(e){var t=e.htmlId,n=e.name,a=e.label,s=e.type,l=void 0===s?"text":s,p=e.required,u=void 0!==p&&p,c=e.onChange,d=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(i.a,{htmlFor:t,label:a,required:u}),o.a.createElement("input",Object.assign({id:t,type:l,name:n,placeholder:d,value:m,onChange:c,style:h&&{border:"solid 1 px red"}},f)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(0),a=n.n(r);var o=function(){return a.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22",width:"24px"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(7),a=n(1),o=n(2),i=n(4),s=n(3),l=n(0),p=n.n(l),u=n(5),c=n(9),d=n(8),m=function(e){Object(i.a)(n,e);var t=Object(s.a)(n);function n(e){var r;return Object(a.a)(this,n),(r=t.call(this,e)).toggleShowPassword=function(e){r.setState((function(e){return{showPassword:!e.showPassword}})),e&&e.preventDefault()},r.state={showPassword:!1},r}return Object(o.a)(n,[{key:"render",value:function(){var e=this.props,t=e.htmlId,n=e.value,a=e.label,o=e.error,i=e.onChange,s=e.placeholder,l=e.maxLength,m=e.showVisibilityToggle,h=e.quality,g=Object(r.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),f=this.state.showPassword;return p.a.createElement(d.a,Object.assign({htmlId:t,label:a,placeholder:s,type:f?"text":"password",onChange:i,value:n,maxLength:l,error:o,required:!0},g),m&&p.a.createElement("a",{href:"",onClick:this.toggleShowPassword,style:{marginLeft:5}},p.a.createElement(c.a,null)),n.length>0&&h&&p.a.createElement(u.a,{percent:h,width:130}))}}]),n}(p.a.Component);m.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var h=m},function(e,t,n){e.exports={fieldset:"textInput_fieldset__12mau",error:"textInput_error__r7LpN",inputError:"textInput_inputError__2pecQ"}},,,function(e,t){e.exports=[{name:"EyeIcon",description:"",code:'import React from \'react\';\nfunction EyeIcon() {\n    return (\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22" width="24px"><g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d"><path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" /><circle cx="466.08" cy="466.02" r="134.5" /></g></svg>\n    )\n}\nexport default EyeIcon;',examples:[{name:"Example",description:"",code:"import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon'\n\nexport default function EyeIconExample() {\n    return <EyeIcon />\n}"}]},{name:"HelloWorld",description:"Custom message to say Hello",props:{message:{type:{name:"string"},required:!1,description:"Message to Display",defaultValue:{value:"'World'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Custom message to say Hello */\nfunction HelloWorld({message}) {\n    return <div>Hello {message}</div>\n\n}\n\nHelloWorld.propTypes = {\n    /** Message to Display */\n    message: PropTypes.string\n}\n\nHelloWorld.defaultProps = {\n    message: 'World'\n};\n\nexport default HelloWorld; ",examples:[{name:"ExampleHelloWorld",description:"Custom Message",code:"import React from 'react';\nimport HelloWorld from 'ps-react/HelloWorld';\n\n/** Custom Message */\nexport default function ExampleHelloWorld() {\n    return <HelloWorld message=\"Pluralsite viewers!\" />\n}"}]},{name:"Label",description:"Label with required field display, htmlFor, and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated inpuit"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:""}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n    return (\n        <label style={{display: 'block'}} htmlFor={htmlFor}>\n            {label} {required && <span style={{color: 'red'}}> *</span>}\n        </label>\n    )\n}\n\nLabel.propTypes = {\n    /** HTML ID for associated inpuit */\n    htmlFor: PropTypes.string.isRequired,\n    /** Label text */\n    label: PropTypes.string.isRequired,\n    /**Display asterisk after label if true */\n    required: PropTypes.bool\n}\n\nexport default Label;",examples:[{name:"ExampleOptional",description:"Optional label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional label */\nexport default function ExampleOptional() {\n    return <Label htmlFor=\"test\" label=\"test\" />\n}"},{name:"ExampleRequired",description:"Required label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Required label */\nexport default function ExampleRequired() {\n    return <Label htmlFor=\"test\" label=\"test\" required/>\n}"}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  }\n\n  render() {\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}>\n        {\n          showVisibilityToggle &&\n          <a\n            href=\"\"\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}>\n            <EyeIcon />\n          </a>\n        }\n        {\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n        }\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInput;",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:"import React from 'react';\nimport PasswordInput from 'ps-react/PasswordInput';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: ''\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password-input-example-all-features\"\n          name=\"password\"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;"}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar width"},height:{type:{name:"number"},required:!1,description:"Bar height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends React.Component {\n    getColor = (percent) => {\n        if (this.props.percent === 100) return 'green';\n        if (this.props.percent >= 80) return 'lightgreen';\n        if (this.props.percent >= 60) return 'yellowgreen';\n        if (this.props.percent >= 40) return 'yellow';\n        if (this.props.percent >= 20) return 'crimson';\n        return 'red';\n    }\n\n    getWidthAsPercentOfTotalWidth = () => {\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\n    }\n\n    render() {\n        const {percent, width, height} = this.props;\n        return (\n            <div style={{border: 'solid 1px lightgray', width:width}}>\n                <div style={{\n                    width: this.getWidthAsPercentOfTotalWidth(),\n                    height,\n                    backgroundColor: this.getColor(percent)\n                }} />\n            </div>\n        );\n    }\n}\n\nProgressBar.propTypes = {\n    /** Percent of progress completed */\n    percent: PropTypes.number.isRequired,\n    /** Bar width */\n    width: PropTypes.number.isRequired,\n    /** Bar height */\n    height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n    height: 5\n}\n\nexport default ProgressBar;",examples:[{name:"Example100Percent",description:"100% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 100% progress */\nexport default function Example100Percent() {\n    return <ProgressBar percent={100} width={150} />\n}"},{name:"Example10Percent",description:"10% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 10% progress */\nexport default function Example10Percent() {\n    return <ProgressBar percent={10} width={150} />\n}"},{name:"Example30Percent",description:"30% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 30% progress */\nexport default function Example30Percent() {\n    return <ProgressBar percent={30} width={150} />\n}"},{name:"Example50Percent",description:"50% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 50% progress */\nexport default function Example50Percent() {\n    return <ProgressBar percent={50} width={150} />\n}"},{name:"Example70Percent",description:"70% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n    return <ProgressBar percent={70} width={150} />\n}"},{name:"Example90Percent",description:"90% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 90% progress */\nexport default function Example90Percent() {\n    return <ProgressBar percent={90} width={150} />\n}"}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport TextInput from \'../TextInput\';\nimport PasswordInput from \'../PasswordInput\';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: \'\',\n        password: \'\'\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if (!email) errors.email = \'Email required.\';\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div>\n        <TextInput\n          htmlId="registration-form-email"\n          name="email"\n          onChange={this.onChange}\n          label="Email"\n          value={email}\n          error={errors.email}\n          required />\n\n        <PasswordInput\n          htmlId="registration-form-password"\n          name="password"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password} />\n\n        <input type="submit" value="Register" onClick={this.onSubmit} />\n      </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: "Thanks for registering!",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;',examples:[{name:"ExampleRegistrationForm",description:"",code:"import React from 'react';\nimport RegistrationForm from 'ps-react/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n    onSubmit = (user) => {\n        console.log(user);\n    }\n    render() {\n        return <RegistrationForm onSubmit={this.onSubmit} />\n    }\n\n\n}"}]},{name:"TextInput",description:"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div style={{marginBottom:16}}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            style={error && {border: 'solid 1 px red'}}\n            {...props}/>\n            {children}\n            {error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with Error",code:"import React from 'react';\nimport TextInput from 'ps-react/TextInput';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInput\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;"},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\n/** Optional TextBox */\nexport default class ExampleOptional extends React.Component {\n    render() {\n        return (\n            <TextInput\n            htmlId="example-optional"\n            label="First Name"\n            name="firstname"\n            onChange={() => {}}\n            />\n        )\n    }\n}'}]},{name:"TextInputBEM",description:"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className=\"textinput\">\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            className={error && 'textinput__input--state-error'}\n            {...props}/>\n            {children}\n            {error && <div className=\"textinput__error\">{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with Error",code:"import React from 'react';\nimport TextInputBEM from 'ps-react/TextInputBEM';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputBEM\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;"}]},{name:"TextInputCSSModules",description:"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styles from './textInput.module.css';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className={styles.fieldset}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            className={error && styles.inputError}\n            {...props}/>\n            {children}\n            {error && <div className={styles.error}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with Error",code:"import React from 'react';\nimport TextInputCSSModules from 'ps-react/TextInputCSSModules';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputCSSModules\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;"}]},{name:"TextInputStyledComponents",description:"Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styled from 'styled-components';\n\n/** Text imput with integraaated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n\n    const Error = styled.div`\n        color: red;\n    `;\n    const Input = styled.input`\n        border: ${error && 'solid 1px red'};\n        display: block;\n    `;\n    const Fieldset = styled.div`\n        margin-bottom: 16px;\n    `;\n\n    return (\n        <Fieldset>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <Input\n            id={htmlId}\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            {...props}/>\n            {children}\n            {error && <Error>{error}</Error>}\n        </Fieldset>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n  \n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n  \n    /** Input label */\n    label: PropTypes.string.isRequired,\n  \n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n  \n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n  \n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n  \n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n  \n    /** Value */\n    value: PropTypes.any,\n  \n    /** String to display when error occurs */\n    error: PropTypes.string,\n  \n    /** Child component to display next to the input */\n    children: PropTypes.node\n  };\n  \n  export default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with Error",code:"import React from 'react';\nimport TextInputStyledComponents from 'ps-react/TextInputStyledComponents';\n\n/** Required TextBox with Error*/\nclass ExampleOptional extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          textValue: ''\n        };\n      }\n    render() {\n        return (\n            <TextInputStyledComponents\n            htmlId=\"example-optional\"\n            label=\"First Name\"\n            name=\"firstname\"\n            onChange={ event => this.setState({ textValue: event.target.value })}\n            required\n            error={this.state.textValue === '' ? \"First Name Is Required\" : undefined}\n            />\n        )\n    }\n}\n\nexport default ExampleOptional;"}]}]},,function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(9);function i(){return a.a.createElement(o.a,null)}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(6);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(6);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(10),u=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).state={password:""},a}return Object(a.a)(n,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return l.a.createElement("div",null,l.a.createElement(p.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(t){return e.setState({password:t.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),n}(l.a.Component);t.default=u},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:100,width:150})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:10,width:150})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:30,width:150})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:50,width:150})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:70,width:150})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n.n(r),o=n(5);function i(){return a.a.createElement(o.a,{percent:90,width:150})}},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(8),u=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).state={textValue:""},a}return Object(a.a)(n,[{key:"render",value:function(){var e=this;return l.a.createElement(p.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(t){return e.setState({textValue:t.target.value})},required:!0,error:""===this.state.textValue?"First Name Is Required":void 0})}}]),n}(l.a.Component);t.default=u},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(8),u=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"render",value:function(){return l.a.createElement(p.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}}]),n}(l.a.Component)},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n(0),a=n.n(r);function o(e){var t=e.message;return a.a.createElement("div",null,"Hello ",t)}o.defaultProps={message:"World"};var i=o;function s(){return a.a.createElement(i,{message:"Pluralsite viewers!"})}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(8),u=n(10),c=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).onChange=function(e){var t=a.state.user;t[e.target.name]=e.target.value,a.setState({user:t})},a.onSubmit=function(){var e=a.state.user;a.validate(e)&&(a.props.onSubmit(e),a.setState({submitted:!0}))},a.state={user:{email:"",password:""},errors:{},submitted:!1},a}return Object(a.a)(n,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var t=e.email,n=e.password,r={},a=this.props.minPasswordLength;return t||(r.email="Email required."),n.length<a&&(r.password="Password must be at least ".concat(a," characters.")),this.setState({errors:r}),0===Object.getOwnPropertyNames(r).length}},{key:"render",value:function(){var e=this.state,t=e.errors,n=e.submitted,r=this.state.user,a=r.email,o=r.password;return n?l.a.createElement("h2",null,this.props.confirmationMessage):l.a.createElement("div",null,l.a.createElement(p.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:t.email,required:!0}),l.a.createElement(u.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:t.password}),l.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),n}(l.a.Component);c.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var d=c,m=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(){var e;Object(r.a)(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))).onSubmit=function(e){console.log(e)},e}return Object(a.a)(n,[{key:"render",value:function(){return l.a.createElement(d,{onSubmit:this.onSubmit})}}]),n}(l.a.Component)},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=(n(48),n(7)),u=n(6);var c=function(e){var t=e.htmlId,n=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,c=e.onChange,d=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(p.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return l.a.createElement("div",{className:"textinput"},l.a.createElement(u.a,{htmlFor:t,label:r,required:s}),l.a.createElement("input",Object.assign({id:t,type:o,name:n,placeholder:d,value:m,onChange:c,className:h&&"textinput__input--state-error"},f)),g,h&&l.a.createElement("div",{className:"textinput__error"},h))},d=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).state={textValue:""},a}return Object(a.a)(n,[{key:"render",value:function(){var e=this;return l.a.createElement(c,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(t){return e.setState({textValue:t.target.value})},required:!0,error:""===this.state.textValue?"First Name Is Required":void 0})}}]),n}(l.a.Component);t.default=d},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(7),u=n(6),c=n(11),d=n.n(c);var m=function(e){var t=e.htmlId,n=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,f=e.children,y=Object(p.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return l.a.createElement("div",{className:d.a.fieldset},l.a.createElement(u.a,{htmlFor:t,label:r,required:s}),l.a.createElement("input",Object.assign({id:t,type:o,name:n,placeholder:m,value:h,onChange:c,className:g&&d.a.inputError},y)),f,g&&l.a.createElement("div",{className:d.a.error},g))},h=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).state={textValue:""},a}return Object(a.a)(n,[{key:"render",value:function(){var e=this;return l.a.createElement(m,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(t){return e.setState({textValue:t.target.value})},required:!0,error:""===this.state.textValue?"First Name Is Required":void 0})}}]),n}(l.a.Component);t.default=h},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(2),o=n(4),i=n(3),s=n(0),l=n.n(s),p=n(12),u=n(7),c=n(6),d=n(13);function m(){var e=Object(p.a)(["\n        margin-bottom: 16px;\n    "]);return m=function(){return e},e}function h(){var e=Object(p.a)(["\n        border: ",";\n        display: block;\n    "]);return h=function(){return e},e}function g(){var e=Object(p.a)(["\n        color: red;\n    "]);return g=function(){return e},e}var f=function(e){var t=e.htmlId,n=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,p=e.onChange,f=e.placeholder,y=e.value,b=e.error,v=e.children,x=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),w=d.a.div(g()),E=d.a.input(h(),b&&"solid 1px red"),P=d.a.div(m());return l.a.createElement(P,null,l.a.createElement(c.a,{htmlFor:t,label:r,required:s}),l.a.createElement(E,Object.assign({id:t,type:o,name:n,placeholder:f,value:y,onChange:p},x)),v,b&&l.a.createElement(w,null,b))},y=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(e){var a;return Object(r.a)(this,n),(a=t.call(this,e)).state={textValue:""},a}return Object(a.a)(n,[{key:"render",value:function(){var e=this;return l.a.createElement(f,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(t){return e.setState({textValue:t.target.value})},required:!0,error:""===this.state.textValue?"First Name Is Required":void 0})}}]),n}(l.a.Component);t.default=y},,,,,,,function(e,t,n){},function(e,t,n){(function(t){var n="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},r=function(){var e=/\blang(?:uage)?-(\w+)\b/i,t=0,r=n.Prism={manual:n.Prism&&n.Prism.manual,util:{encode:function(e){return e instanceof a?new a(e.type,r.util.encode(e.content),e.alias):"Array"===r.util.type(e)?e.map(r.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function(e){switch(r.util.type(e)){case"Object":var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=r.util.clone(e[n]));return t;case"Array":return e.map&&e.map((function(e){return r.util.clone(e)}))}return e}},languages:{extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var o=(a=a||r.languages)[e];if(2==arguments.length){for(var i in n=arguments[1])n.hasOwnProperty(i)&&(o[i]=n[i]);return o}var s={};for(var l in o)if(o.hasOwnProperty(l)){if(l==t)for(var i in n)n.hasOwnProperty(i)&&(s[i]=n[i]);s[l]=o[l]}return r.languages.DFS(r.languages,(function(t,n){n===a[e]&&t!=e&&(this[t]=s)})),a[e]=s},DFS:function(e,t,n,a){for(var o in a=a||{},e)e.hasOwnProperty(o)&&(t.call(e,o,e[o],n||o),"Object"!==r.util.type(e[o])||a[r.util.objId(e[o])]?"Array"!==r.util.type(e[o])||a[r.util.objId(e[o])]||(a[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,o,a)):(a[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,null,a)))}},plugins:{},highlightAll:function(e,t){var n={callback:t,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};r.hooks.run("before-highlightall",n);for(var a,o=n.elements||document.querySelectorAll(n.selector),i=0;a=o[i++];)r.highlightElement(a,!0===e,n.callback)},highlightElement:function(t,a,o){for(var i,s,l=t;l&&!e.test(l.className);)l=l.parentNode;l&&(i=(l.className.match(e)||[,""])[1].toLowerCase(),s=r.languages[i]),t.className=t.className.replace(e,"").replace(/\s+/g," ")+" language-"+i,l=t.parentNode,/pre/i.test(l.nodeName)&&(l.className=l.className.replace(e,"").replace(/\s+/g," ")+" language-"+i);var p={element:t,language:i,grammar:s,code:t.textContent};if(r.hooks.run("before-sanity-check",p),!p.code||!p.grammar)return p.code&&(r.hooks.run("before-highlight",p),p.element.textContent=p.code,r.hooks.run("after-highlight",p)),void r.hooks.run("complete",p);if(r.hooks.run("before-highlight",p),a&&n.Worker){var u=new Worker(r.filename);u.onmessage=function(e){p.highlightedCode=e.data,r.hooks.run("before-insert",p),p.element.innerHTML=p.highlightedCode,o&&o.call(p.element),r.hooks.run("after-highlight",p),r.hooks.run("complete",p)},u.postMessage(JSON.stringify({language:p.language,code:p.code,immediateClose:!0}))}else p.highlightedCode=r.highlight(p.code,p.grammar,p.language),r.hooks.run("before-insert",p),p.element.innerHTML=p.highlightedCode,o&&o.call(t),r.hooks.run("after-highlight",p),r.hooks.run("complete",p)},highlight:function(e,t,n){var o=r.tokenize(e,t);return a.stringify(r.util.encode(o),n)},matchGrammar:function(e,t,n,a,o,i,s){var l=r.Token;for(var p in n)if(n.hasOwnProperty(p)&&n[p]){if(p==s)return;var u=n[p];u="Array"===r.util.type(u)?u:[u];for(var c=0;c<u.length;++c){var d=u[c],m=d.inside,h=!!d.lookbehind,g=!!d.greedy,f=0,y=d.alias;if(g&&!d.pattern.global){var b=d.pattern.toString().match(/[imuy]*$/)[0];d.pattern=RegExp(d.pattern.source,b+"g")}d=d.pattern||d;for(var v=a,x=o;v<t.length;x+=t[v].length,++v){var w=t[v];if(t.length>e.length)return;if(!(w instanceof l)){d.lastIndex=0;var E=1;if(!(k=d.exec(w))&&g&&v!=t.length-1){if(d.lastIndex=x,!(k=d.exec(e)))break;for(var P=k.index+(h?k[1].length:0),q=k.index+k[0].length,T=v,I=x,C=t.length;C>T&&(q>I||!t[T].type&&!t[T-1].greedy);++T)P>=(I+=t[T].length)&&(++v,x=I);if(t[v]instanceof l||t[T-1].greedy)continue;E=T-v,w=e.slice(x,I),k.index-=x}if(k){h&&(f=k[1].length);q=(P=k.index+f)+(k=k[0].slice(f)).length;var k,j=w.slice(0,P),O=w.slice(q),R=[v,E];j&&(++v,x+=j.length,R.push(j));var S=new l(p,m?r.tokenize(k,m):k,y,k,g);if(R.push(S),O&&R.push(O),Array.prototype.splice.apply(t,R),1!=E&&r.matchGrammar(e,t,n,v,x,!0,p),i)break}else if(i)break}}}}},tokenize:function(e,t){var n=[e],a=t.rest;if(a){for(var o in a)t[o]=a[o];delete t.rest}return r.matchGrammar(e,n,t,0,0,!1),n},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var a,o=0;a=n[o++];)a(t)}}},a=r.Token=function(e,t,n,r,a){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length,this.greedy=!!a};if(a.stringify=function(e,t,n){if("string"==typeof e)return e;if("Array"===r.util.type(e))return e.map((function(n){return a.stringify(n,t,e)})).join("");var o={type:e.type,content:a.stringify(e.content,t,n),tag:"span",classes:["token",e.type],attributes:{},language:t,parent:n};if("comment"==o.type&&(o.attributes.spellcheck="true"),e.alias){var i="Array"===r.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(o.classes,i)}r.hooks.run("wrap",o);var s=Object.keys(o.attributes).map((function(e){return e+'="'+(o.attributes[e]||"").replace(/"/g,"&quot;")+'"'})).join(" ");return"<"+o.tag+' class="'+o.classes.join(" ")+'"'+(s?" "+s:"")+">"+o.content+"</"+o.tag+">"},!n.document)return n.addEventListener?(n.addEventListener("message",(function(e){var t=JSON.parse(e.data),a=t.language,o=t.code,i=t.immediateClose;n.postMessage(r.highlight(o,r.languages[a],a)),i&&n.close()}),!1),n.Prism):n.Prism;var o=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return o&&(r.filename=o.src,!document.addEventListener||r.manual||o.hasAttribute("data-manual")||("loading"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(r.highlightAll):window.setTimeout(r.highlightAll,16):document.addEventListener("DOMContentLoaded",r.highlightAll))),n.Prism}();e.exports&&(e.exports=r),"undefined"!=typeof t&&(t.Prism=r),r.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\s\S])*\1|[^\s'">=]+))?)*\s*\/?>/i,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:('|")[\s\S]*?(\1)|[^\s>]+)/i,inside:{punctuation:/[=>"']/}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},r.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),r.languages.xml=r.languages.markup,r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0}],string:{pattern:/(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,lookbehind:!0,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(true|false)\b/,function:/[a-z0-9_]+(?=\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},r.languages.javascript=r.languages.extend("clike",{keyword:/\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,number:/\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,function:/[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),r.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0,greedy:!0}}),r.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\\\|\\?[^\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\$\{[^}]+\}/,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}}}),r.languages.markup&&r.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,lookbehind:!0,inside:r.languages.javascript,alias:"language-javascript"}}),r.languages.js=r.languages.javascript,function(e){var t=e.util.clone(e.languages.javascript);e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=/<\/?[\w\.:-]+\s*(?:\s+(?:[\w\.:-]+(?:=(?:("|')(\\?[\s\S])*?\1|[^\s'">=]+|(\{[\s\S]*?\})))?|\{\.{3}\w+\})\s*)*\/?>/i,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:('|")[\s\S]*?(\1)|[^\s>]+)/i,e.languages.insertBefore("inside","attr-name",{spread:{pattern:/\{\.{3}\w+\}/,inside:{punctuation:/\{|\}|\./,"attr-value":/\w+/}}},e.languages.jsx.tag);var n=e.util.clone(e.languages.jsx);delete n.punctuation,n=e.languages.insertBefore("jsx","operator",{punctuation:/=(?={)|[{}[\];(),.:]/},{jsx:n}),e.languages.insertBefore("inside","attr-value",{script:{pattern:/=(\{(?:\{[^}]*\}|[^}])+\})/i,inside:n,alias:"language-javascript"}},e.languages.jsx.tag)}(r)}).call(this,n(41))},,,,,,,function(e,t,n){var r={"./EyeIcon/Example":16,"./EyeIcon/Example.js":16,"./HelloWorld/ExampleHelloWorld":28,"./HelloWorld/ExampleHelloWorld.js":28,"./Label/ExampleOptional":17,"./Label/ExampleOptional.js":17,"./Label/ExampleRequired":18,"./Label/ExampleRequired.js":18,"./PasswordInput/ExampleAllFeatures":19,"./PasswordInput/ExampleAllFeatures.js":19,"./ProgressBar/Example100Percent":20,"./ProgressBar/Example100Percent.js":20,"./ProgressBar/Example10Percent":21,"./ProgressBar/Example10Percent.js":21,"./ProgressBar/Example30Percent":22,"./ProgressBar/Example30Percent.js":22,"./ProgressBar/Example50Percent":23,"./ProgressBar/Example50Percent.js":23,"./ProgressBar/Example70Percent":24,"./ProgressBar/Example70Percent.js":24,"./ProgressBar/Example90Percent":25,"./ProgressBar/Example90Percent.js":25,"./RegistrationForm/ExampleRegistrationForm":29,"./RegistrationForm/ExampleRegistrationForm.js":29,"./TextInput/ExampleError":26,"./TextInput/ExampleError.js":26,"./TextInput/ExampleOptional":27,"./TextInput/ExampleOptional.js":27,"./TextInputBEM/ExampleError":30,"./TextInputBEM/ExampleError.js":30,"./TextInputCSSModules/ExampleError":31,"./TextInputCSSModules/ExampleError.js":31,"./TextInputStyledComponents/ExampleError":32,"./TextInputStyledComponents/ExampleError.js":32};function a(e){var t=o(e);return n(t)}function o(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=47},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(33),i=n.n(o),s=(n(39),n(1)),l=n(2),p=n(4),u=n(3),c=function(e){var t=e.components;return a.a.createElement("ul",{className:"navigation"},t.map((function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))})))},d=(n(40),n(34)),m=(n(46),function(e){Object(p.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(t){e.element=t}},a.a.createElement(d.PrismCode,{className:"language-jsx"},this.props.children))}}]),n}(a.a.Component)),h=function(e){Object(p.a)(r,e);var t=Object(u.a)(r);function r(e){var n;return Object(s.a)(this,r),(n=t.call(this,e)).toggleCode=function(e){e.preventDefault(),n.setState((function(e){return{showCode:!e.showCode}}))},n.state={showCode:!1},n}return Object(l.a)(r,[{key:"render",value:function(){var e=this.state.showCode,t=this.props.example,r=t.code,o=t.description,i=t.name,s=n(47)("./".concat(this.props.componentName,"/").concat(i)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(s,null),a.a.createElement("p",null,a.a.createElement("a",{href:"",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(m,null,r))}}]),r}(a.a.Component),g=function(e){var t=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(t).map((function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,t[e].description),a.a.createElement("td",null,t[e].type.name),a.a.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value),a.a.createElement("td",null,t[e].required&&"X"))}))))},f=function(e){var t=e.component,n=t.name,r=t.description,o=t.props,i=t.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,n),a.a.createElement("p",null,r),a.a.createElement("h3",null,"Example",i.length>1&&"s"),i.length>0?i.map((function(e){return a.a.createElement(h,{key:e.code,example:e,componentName:n})})):"No examples exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(g,{props:o}):"This component accepts no props.")},y=n(14),b=n.n(y),v=function(e){Object(p.a)(n,e);var t=Object(u.a)(n);function n(e){var r;return Object(s.a)(this,n),(r=t.call(this,e)).state={route:window.location.hash.substr(1)},r}return Object(l.a)(n,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,t=e?b.a.filter((function(t){return t.name===e}))[0]:b.a[0];return a.a.createElement("div",null,a.a.createElement(c,{components:b.a.map((function(e){return e.name}))}),a.a.createElement(f,{component:t}))}}]),n}(a.a.Component),x=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,50)).then((function(t){var n=t.getCLS,r=t.getFID,a=t.getFCP,o=t.getLCP,i=t.getTTFB;n(e),r(e),a(e),o(e),i(e)}))};i.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(v,null)),document.getElementById("root")),x()}],[[49,1,2]]]);
//# sourceMappingURL=main.71b36377.chunk.js.map